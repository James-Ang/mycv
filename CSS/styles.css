body {
    margin: 0px;
    /* border: solid; */
    /* padding-bottom: 200px; */
    /* background-color: aquamarine; */
    text-align: center;
    /* font-size: 2em; */
    color: 40514E;
    

}
/* Take note of fall backs */
/* see https://www.cssfontstack.com/ */

h1 {
    margin: 50px auto 0 auto; 
    /* margin: auto; */
    /* width: 60%; */
    /* background-color: aliceblue; */
    font-family: 'Sacramento', cursive;
    font-size: 5.625rem;
    color: #66BFBF;
    /* line-height: 2; */
}
/* font size, 16px = 100% = 1em, % and em change dynamically while px stays the same */
/* When zoom, static or dynamic do not matter. */
/* em and % are inherited. If the body has 2em, and h1 has 3 em, total will be 6 em. 
if don't want this to happen, use rem (root em), menas ignore all parents fnt size.*/
/*  Angela's advise is to use rem or px for font size, not em */
/* if pixels, fonts a re static sizes, so it won't magnify twice in body and h1. 
e.g if body has 20 px, and h1 has 90 px, the result will be 90 px.*/

h2 {
    font-size: 2.5rem;
    color: #66BFBF;
    font-weight: normal;
    font-family: sans-serif;
}

h3 {
    color: #11999E;
    font-family: sans-serif;
}

hr {
    border-style: none;
    border-top-style: dotted;
    border-width: 5px;
    border-color: gray;
    width: 5%;
    margin: 100px auto 100px auto;
}


p  {
    font-family: 'Montserrat', sans-serif;
    font-size: 1em;
}

.top-container {
    
    position: relative;
    background-color: #e8fafa;
    /* border: solid; */
    /* border-width: 20px; */
    /* height: 200px; */
    /* width: 200px; */
    /* margin: 10px; */
    /* background-image: url("test.png"); */
    padding-top: 100px;
}

.top-cloud {
    position: absolute;
    /* left: 200px; */
    right: 300px;
    top: 50px;
}

.bottom-cloud {
    position: absolute;
    left: 300px;
    bottom: 300px;
}

.middle-container {
    /* position: relative;
    left: 30px; */
    /* top: 50px; */
    /* display: inline; */
    /* height: 200px;
    width: 200px;
    background-color: red;
    animation: mymove 5s infinite; */
    margin-top: 100px;
}

.bottom-container {
    /* position: relative; */
    /* left: 30px; */
    /* height: 200px; */
    /* width: 200px; */
    background-color: #66BFBF;
    /* display: none */
    margin-top: 50px;
    padding-top: 50px;
    padding-bottom: 30px;
}

.pro {
    /* color: red; */
    text-decoration: underline;
}

.s1 {
    position: relative;
    /* left: 50px; */
    background-color: blueviolet;
    display: inline-block;
    width: 200px;
}

.last {
    height: 100px;
    width: 100px;
    /* border: solid 20px; */
    background-color: aqua;
    display:inline-block
}


.abs1 {
    position: absolute;
    left: 200px;
    /* bottom: 0px; */
    border: dashed;
    height: 150px;
    width: 150px;
    /* border: solid 20px; */
    background-color: yellow;
    display:block
}

.abs2 {
    position: absolute;
    right: 20px;
    /* bottom: 20px; */
    border: solid;
    height: 150px;
    width: 150px;
    /* border: solid 20px; */
    background-color: blue;
    display:block
}

.abs3 {
    /* position: absolute; */
    /* left: 20px; */
    height: 150px;
    width: 150px;
    /* border: solid 20px; */
    background-color: red;
    /* display:block */
}

@keyframes mymove {
    from {background-color: red;}
    to {background-color: blue;}
  }


.skill-row {
    margin: 100px auto 100px auto;
    width: 50pc;
    text-align: left;
    line-height: 2;
}

.skill-img1 {
    width: 25%;
    float: left;
    padding-right: 20px;
}

.skill-img2 {
    width: 25%;
    float: right;
    padding-left: 20px;
}
/*  Don't use float for positioning */

.profile-para {
    width: 50%;
    margin: auto;
    color: #40514E;
}

.profile-img {
    height: 205px;
    width: 205px;
}

.contact-para {
    width: 50%;
    margin: auto;
    color: black;
    margin-top: 50px;
    margin-bottom: 50px;
}

a {
    color: #11999E;
    margin: auto 20px auto 20px;
    font-family: 'Montserrat', sans-serif;
    text-decoration: none;
}

a:hover {
    color: #EAF6F6;
}

.foot-para {
    color: white;
    font-size: 0.75rem;
    padding: 20px 0;
}

.btn {
    background: #11cdd4;
    background-image: -webkit-linear-gradient(top, #11cdd4, #11999e);
    background-image: -moz-linear-gradient(top, #11cdd4, #11999e);
    background-image: -ms-linear-gradient(top, #11cdd4, #11999e);
    background-image: -o-linear-gradient(top, #11cdd4, #11999e);
    background-image: linear-gradient(to bottom, #11cdd4, #11999e);
    -webkit-border-radius: 8;
    -moz-border-radius: 8;
    border-radius: 8px;
    font-family: 'Montserrat', sans-serif;
    color: #ffffff;
    font-size: 20px;
    padding: 10px 20px 10px 20px;
    text-decoration: none;
  }
  
  .btn:hover {
    background: #30e3cb;
    background-image: -webkit-linear-gradient(top, #30e3cb, #2bc4ad);
    background-image: -moz-linear-gradient(top, #30e3cb, #2bc4ad);
    background-image: -ms-linear-gradient(top, #30e3cb, #2bc4ad);
    background-image: -o-linear-gradient(top, #30e3cb, #2bc4ad);
    background-image: linear-gradient(to bottom, #30e3cb, #2bc4ad);
    text-decoration: none;
  }

/* .skill-para1 {
    clear: left;
} */
/* Clear is clearing the wrapping on the left side */

/* .skill-para2 {
    clear: right;
} */

/* .s2 {
    background-color: blueviolet;
} */

/* inline elements like span, images, anchors<a> only takes as much space as it has too */
/* span and divs only used in conjunction with css*/
/* inline do not allow for change of width, but block allows*/
/* Relative positioning doesn't affect any other elements, only affect the element in focus*/
/* On the other hand, "absolute" takes the element out of the flow of the document
 the element is no longer a part in the flow of the document 
 , as if the element breaks the friendship with other elements*/
/* Inline will add a bit of gap in between the squares*/
/*  */